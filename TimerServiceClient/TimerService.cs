//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UF.Training.TimerService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResult", Namespace="http://schemas.datacontract.org/2004/07/UF.Training.TimerService")]
    public partial class ServiceResult : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        private int StatusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITimerService")]
public interface ITimerService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Init", ReplyAction="http://tempuri.org/ITimerService/InitResponse")]
    UF.Training.TimerService.ServiceResult Init();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Init", ReplyAction="http://tempuri.org/ITimerService/InitResponse")]
    System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> InitAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Start", ReplyAction="http://tempuri.org/ITimerService/StartResponse")]
    UF.Training.TimerService.ServiceResult Start(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Start", ReplyAction="http://tempuri.org/ITimerService/StartResponse")]
    System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> StartAsync(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Stop", ReplyAction="http://tempuri.org/ITimerService/StopResponse")]
    UF.Training.TimerService.ServiceResult Stop(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Stop", ReplyAction="http://tempuri.org/ITimerService/StopResponse")]
    System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> StopAsync(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Reset", ReplyAction="http://tempuri.org/ITimerService/ResetResponse")]
    UF.Training.TimerService.ServiceResult Reset(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Reset", ReplyAction="http://tempuri.org/ITimerService/ResetResponse")]
    System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> ResetAsync(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Close", ReplyAction="http://tempuri.org/ITimerService/CloseResponse")]
    UF.Training.TimerService.ServiceResult Close(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/Close", ReplyAction="http://tempuri.org/ITimerService/CloseResponse")]
    System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> CloseAsync(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/LapStop", ReplyAction="http://tempuri.org/ITimerService/LapStopResponse")]
    UF.Training.TimerService.ServiceResult LapStop(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/LapStop", ReplyAction="http://tempuri.org/ITimerService/LapStopResponse")]
    System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> LapStopAsync(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/GetTimes", ReplyAction="http://tempuri.org/ITimerService/GetTimesResponse")]
    System.DateTime[] GetTimes(string id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/GetTimes", ReplyAction="http://tempuri.org/ITimerService/GetTimesResponse")]
    System.Threading.Tasks.Task<System.DateTime[]> GetTimesAsync(string id);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ITimerServiceChannel : ITimerService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TimerServiceClient : System.ServiceModel.ClientBase<ITimerService>, ITimerService
{
    
    public TimerServiceClient()
    {
    }
    
    public TimerServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public TimerServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TimerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TimerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public UF.Training.TimerService.ServiceResult Init()
    {
        return base.Channel.Init();
    }
    
    public System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> InitAsync()
    {
        return base.Channel.InitAsync();
    }
    
    public UF.Training.TimerService.ServiceResult Start(string id)
    {
        return base.Channel.Start(id);
    }
    
    public System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> StartAsync(string id)
    {
        return base.Channel.StartAsync(id);
    }
    
    public UF.Training.TimerService.ServiceResult Stop(string id)
    {
        return base.Channel.Stop(id);
    }
    
    public System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> StopAsync(string id)
    {
        return base.Channel.StopAsync(id);
    }
    
    public UF.Training.TimerService.ServiceResult Reset(string id)
    {
        return base.Channel.Reset(id);
    }
    
    public System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> ResetAsync(string id)
    {
        return base.Channel.ResetAsync(id);
    }
    
    public UF.Training.TimerService.ServiceResult Close(string id)
    {
        return base.Channel.Close(id);
    }
    
    public System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> CloseAsync(string id)
    {
        return base.Channel.CloseAsync(id);
    }
    
    public UF.Training.TimerService.ServiceResult LapStop(string id)
    {
        return base.Channel.LapStop(id);
    }
    
    public System.Threading.Tasks.Task<UF.Training.TimerService.ServiceResult> LapStopAsync(string id)
    {
        return base.Channel.LapStopAsync(id);
    }
    
    public System.DateTime[] GetTimes(string id)
    {
        return base.Channel.GetTimes(id);
    }
    
    public System.Threading.Tasks.Task<System.DateTime[]> GetTimesAsync(string id)
    {
        return base.Channel.GetTimesAsync(id);
    }
}
